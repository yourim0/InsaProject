<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.test.TestDAO">
	<select id="selectTest" resultType="com.example.demo.test.TestVO">
	<![CDATA[
		SELECT NAME FROM TEST_TABLE
	]]>
	</select>
	
	<!-- 시퀀스 -->
	<select id="selectSequence" resultType="Integer">
		SELECT insa_seq.NEXTVAL FROM DUAL
	</select>
	
	<!-- 등록 -->
	<insert id="insertTest">
		INSERT INTO INSA 
		(sabun, name, eng_name, id, pwd, phone, hp, reg_no, years, sex, email, zip, addr1, addr2, job_type, pos_gbn_code, dept_code,
		salary, join_gbn_code, gart_level, put_yn, mil_yn, mil_type, mil_level, mil_startdate, mil_enddate, kosa_reg_yn, kosa_class_code,
		join_date, crm_name, cmp_reg_no, cmp_reg_img, self_intro, profile_image, carrier_image, reg_no_masking)
		VALUES 
		(
		#{sabun}, #{name}, #{eng_name}, #{id}, #{pwd}, #{phone}, #{hp}, #{reg_no}, #{years}, #{sex}, #{email}, #{zip,jdbcType=INTEGER}, #{addr1}, #{addr2},
		#{job_type}, #{pos_gbn_code},#{dept_code},#{salary, jdbcType=INTEGER},#{join_gbn_code},#{gart_level},#{put_yn},#{mil_yn},#{mil_type,jdbcType=VARCHAR},
		#{mil_level,jdbcType=VARCHAR},#{mil_startdate,jdbcType=VARCHAR},#{mil_enddate,jdbcType=VARCHAR},
		#{kosa_reg_yn,jdbcType=VARCHAR},#{kosa_class_code,jdbcType=VARCHAR},#{join_date,jdbcType=VARCHAR},#{crm_name,jdbcType=VARCHAR},
		#{cmp_reg_no,jdbcType=VARCHAR},#{cmp_reg_img,jdbcType=VARCHAR},#{self_intro,jdbcType=VARCHAR},
		#{profile_image,jdbcType=VARCHAR},#{carrier_image,jdbcType=VARCHAR},#{reg_no_masking,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 공통코드 -->
	<select id="selectCommon" resultType="com.example.demo.test.TestVO">
		SELECT * FROM INSA_COM
	</select>
	
	<!-- 아이디 중복체크 -->
	<select id="idCheck" resultType="int">
		SELECT count(*) FROM INSA WHERE id = #{memberId}
	</select>
	
	<!-- 사원정보조회 -->
	<select id="getInfo" resultType="com.example.demo.test.TestVO">
		SELECT * FROM INSA WHERE sabun = #{sabun}
	</select>
		
	<!-- 리스트 페이징 -->
	<select id="getListWithPaging" parameterType="hashMap" resultType="com.example.demo.test.TestVO">

		select sabun,name,reg_no,hp,pos_gbn_code,join_date,retire_date,put_yn,salary,reg_no_masking 
		from (select rownum numrow, A.* from 
		(select sabun,name,reg_no,hp,pos_gbn_code,join_date,retire_date,put_yn,salary,reg_no_masking from INSA 
		WHERE 1=1

		<if test="vo.sabun != null and vo.sabun != ''">
			AND SABUN LIKE '%' || #{vo.sabun} || '%'
		</if>
		<if test="vo.name != null and vo.name != ''">
			AND NAME LIKE '%' || #{vo.name} || '%'
		</if>
		<if test="vo.join_gbn_code != null and vo.join_gbn_code != ''">
			AND join_gbn_code = #{vo.join_gbn_code}
		</if>
		<if test="vo.put_yn != null and vo.put_yn !=''">
			AND put_yn = #{vo.put_yn}
		</if>
		<if test="vo.pos_gbn_code != null and vo.pos_gbn_code != ''">
			AND pos_gbn_code = #{vo.pos_gbn_code}
		</if>
		<if test="vo.join_date != null and vo.join_date != ''">
			AND join_date = #{vo.join_date}
		</if>
		<if test="vo.retire_date != null and vo.retire_date != ''">
			AND retire_date = #{vo.retire_date}
		</if>
		<if test="vo.job_type != null and vo.job_type != ''">
			AND job_type = #{vo.job_type}
		</if>
		order by sabun DESC
		)A
		) where numrow > (#{num}-1) * #{postNum}
		<![CDATA[ and numrow <= #{num} * #{postNum}]]>
	
	</select>
	
	<!-- 게시물 총 개수 -->
	<select id="pageCnt" resultType="int">
		SELECT COUNT(*) FROM INSA WHERE 1=1
		
		<if test="sabun != null and sabun != ''">
			AND SABUN LIKE '%' || #{sabun} || '%'
		</if>
		<if test="name != null and name != ''">
			AND NAME LIKE '%' || #{name} || '%'
		</if>
		<if test="join_gbn_code != null and join_gbn_code != ''">
			AND join_gbn_code = #{join_gbn_code}
		</if>
		<if test="put_yn != null and put_yn !=''">
			AND put_yn = #{put_yn}
		</if>
		<if test="pos_gbn_code != null and pos_gbn_code != ''">
			AND pos_gbn_code = #{pos_gbn_code}
		</if>
		<if test="join_date != null and pos_gbn_code != '' ">
			AND join_date = #{join_date}
		</if>
		<if test="retire_date != null and retire_date != ''">
			AND retire_date = #{retire_date}
		</if>
		<if test="job_type != null and job_type != ''">
			AND job_type = #{job_type}
		</if>
	</select>
	
	<!-- 수정 -->
	<update id="update" parameterType="com.example.demo.test.TestVO">
		UPDATE INSA
		<trim prefix="SET" suffixOverrides=",">
			<if test="name != null">name = #{name},</if>
			<if test="eng_name != null">eng_name = #{eng_name},</if>
			<if test="id != null">id = #{id},</if>
			<if test="pwd != null">pwd = #{pwd},</if>
			<if test="phone != null">phone = #{phone},</if>
			<if test="hp != null">hp = #{hp},</if>
			<if test="reg_no != null">reg_no = #{reg_no},</if>
			<if test="years != null">years = #{years},</if>
			<if test="sex != null">sex = #{sex},</if>
			<if test="email != null">email = #{email},</if>
			<if test="zip != null">zip = #{zip},</if>
			<if test="addr1 != null">addr1 = #{addr1},</if>
			<if test="addr2 != null">addr2 = #{addr2},</if>
			<if test="job_type != null">job_type = #{job_type},</if>
			<if test="pos_gbn_code != null">pos_gbn_code = #{pos_gbn_code},</if>
			<if test="dept_code != null">dept_code = #{dept_code},</if>
			<if test="salary != null">salary = #{salary},</if>
			<if test="join_gbn_code != null">join_gbn_code = #{join_gbn_code},</if>
			<if test="gart_level != null">gart_level = #{gart_level},</if>
			<if test="put_yn != null">put_yn = #{put_yn},</if>
			<if test="mil_yn != null">mil_yn = #{mil_yn},</if>
			<if test="mil_type != null">mil_type = #{mil_type},</if>
			<if test="mil_level != null">mil_level = #{mil_level},</if>
			<if test="mil_startdate != null">mil_startdate = #{mil_startdate},</if>
			<if test="mil_enddate != null">mil_enddate = #{mil_enddate},</if>
			<if test="kosa_reg_yn != null">kosa_reg_yn = #{kosa_reg_yn},</if>
			<if test="kosa_class_code != null">kosa_class_code = #{kosa_class_code},</if>
			<if test="join_date != null">join_date = #{join_date},</if>
			<if test="retire_date != null">retire_date = #{retire_date},</if>
			<if test="crm_name != null">crm_name = #{crm_name},</if>
			<if test="cmp_reg_no != null">cmp_reg_no = #{cmp_reg_no},</if>
			<if test="cmp_reg_img != null">cmp_reg_img = #{cmp_reg_img},</if>
			<if test="self_intro != null">self_intro = #{self_intro},</if>
			<if test="profile_image != null">profile_image = #{profile_image},</if>
			<if test="carrier_image != null">carrier_image = #{carrier_image},</if>
			<if test="reg_no_masking != null">reg_no_masking = #{reg_no_masking},</if>
		</trim>
			WHERE SABUN = ${sabun}
	</update>
	
	<!-- 삭제 -->
	<delete id="delete" parameterType="int">
		DELETE
			FROM INSA
		WHERE SABUN = #{SABUN}
	</delete>
	
	<!-- 이미지 가져오기 -->
	<select id="getProfile" resultType="String">
	<![CDATA[ select profile_image from insa where sabun=#{sabun} ]]>
	</select>
	<select id="getCmp_reg" resultType="String">
	<![CDATA[ select cmp_reg_img from insa where sabun=#{sabun} ]]>
	</select>
	<select id="getCarrier" resultType="String">
	<![CDATA[ select carrier_image from insa where sabun=#{sabun} ]]>
	</select>
		
	
</mapper>